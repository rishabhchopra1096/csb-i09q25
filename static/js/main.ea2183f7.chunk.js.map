{"version":3,"sources":["Card.js","robots.js","CardList.js","SearchBox.js","App.js","index.js"],"names":["Card","props","id","name","email","className","src","alt","robots","username","CardList","cardComponent","map","user","i","SearchBox","onSearchChange","type","placeholder","onChange","App","event","setState","searchField","target","value","console","log","state","filterRobots","this","filter","robot","toLowerCase","includes","searchFeild","Component","ReactDOM","render","document","getElementById"],"mappings":"gNAIe,SAASA,EAAKC,GAChBA,EAAMC,GAAjB,IACMC,EAAOF,EAAME,KACbC,EAAQH,EAAMG,MAEpB,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAK,wBAA0BH,EAAMI,IAAI,UAC9C,gCACE,6BAAKJ,IACL,4BAAIC,UCdL,IAAMI,EAAS,CACpB,CACEN,GAAI,EACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,EACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,EACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,EACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,EACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,2BCxDI,SAASM,EAAST,GAC/B,IACMU,EADSV,EAAMO,OACQI,KAAI,SAACC,EAAMC,GACtC,OAAO,cAACd,EAAD,CAAcE,GAAIW,EAAKX,GAAIC,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAA7CU,MAGpB,OAAO,8BAAMH,I,gCCQAI,EAdG,SAACd,GACjB,IAAMe,EAAiBf,EAAMe,eAC7B,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVY,KAAK,SACLC,YAAY,oBACZC,SAAUH,OC+DHI,G,wDAhEb,aAAe,IAAD,8BAGZ,gBAgBFJ,eAAiB,SAACK,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,QAC1CC,QAAQC,IAAI,EAAKC,MAAML,cAZvB,EAAKK,MAAQ,CACXpB,OAAQA,EACRe,YAAa,IAXH,E,0CAwBd,WAAU,IAAD,OAoBDM,EAAeC,KAAKF,MAAMpB,OAAOuB,QAAO,SAACC,GAC7C,OAAOA,EAAM7B,KACV8B,cACAC,SAAS,EAAKN,MAAML,YAAYU,kBAIrC,OACE,sBAAK5B,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CACEkB,YAAaO,KAAKK,YAClBnB,eAAgBc,KAAKd,iBAEvB,cAACN,EAAD,CAAUF,OAAQqB,W,GA5DRO,cCMlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.ea2183f7.chunk.js","sourcesContent":["import \"./card.css\";\nimport React from \"react\";\nimport \"tachyons\";\n\nexport default function Card(props) {\n  const id = props.id;\n  const name = props.name;\n  const email = props.email;\n\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow\">\n      <img src={\"https://robohash.org/\" + name} alt=\"robot\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n","export const robots = [\n  {\n    id: 1,\n    name: \"Leanne Graham\",\n    username: \"Bret\",\n    email: \"Sincere@april.biz\"\n  },\n  {\n    id: 2,\n    name: \"Ervin Howell\",\n    username: \"Antonette\",\n    email: \"Shanna@melissa.tv\"\n  },\n  {\n    id: 3,\n    name: \"Clementine Bauch\",\n    username: \"Samantha\",\n    email: \"Nathan@yesenia.net\"\n  },\n  {\n    id: 4,\n    name: \"Patricia Lebsack\",\n    username: \"Karianne\",\n    email: \"Julianne.OConner@kory.org\"\n  },\n  {\n    id: 5,\n    name: \"Chelsey Dietrich\",\n    username: \"Kamren\",\n    email: \"Lucio_Hettinger@annie.ca\"\n  },\n  {\n    id: 6,\n    name: \"Mrs. Dennis Schulist\",\n    username: \"Leopoldo_Corkery\",\n    email: \"Karley_Dach@jasper.info\"\n  },\n  {\n    id: 7,\n    name: \"Kurtis Weissnat\",\n    username: \"Elwyn.Skiles\",\n    email: \"Telly.Hoeger@billy.biz\"\n  },\n  {\n    id: 8,\n    name: \"Nicholas Runolfsdottir V\",\n    username: \"Maxime_Nienow\",\n    email: \"Sherwood@rosamond.me\"\n  },\n  {\n    id: 9,\n    name: \"Glenna Reichert\",\n    username: \"Delphine\",\n    email: \"Chaim_McDermott@dana.io\"\n  },\n  {\n    id: 10,\n    name: \"Clementina DuBuque\",\n    username: \"Moriah.Stanton\",\n    email: \"Rey.Padberg@karina.biz\"\n  }\n];\n","import React from \"react\";\nimport Card from \"./Card\";\n\nexport default function CardList(props) {\n  const robots = props.robots;\n  const cardComponent = robots.map((user, i) => {\n    return <Card key={i} id={user.id} name={user.name} email={user.email} />;\n  });\n\n  return <div>{cardComponent}</div>;\n}\n","import React from \"react\";\nimport \"tachyons\";\n\nconst SearchBox = (props) => {\n  const onSearchChange = props.onSearchChange;\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa2 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search RoboFriend\"\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport { robots } from \"./robots\";\nimport SearchBox from \"./SearchBox\";\nimport \"tachyons\";\nimport \"./App.css\";\n\n// The App is a Class which extends Component.\nclass App extends Component {\n  // We are constructing the class.\n  constructor() {\n    // We are calling `super()` so that we get access\n    // to all the super sayan powers of Component.\n    super();\n\n    // this.state is nothing, but a dictionary with key\n    // -value pairs. You could have called it something\n    // else, but it wouldn't have probably worked.\n    // It needs to be called `state`.\n    this.state = {\n      robots: robots,\n      searchField: \"\"\n    };\n  }\n\n  // Now, we create a onSearchChange function which\n  // will update the state value of searchField\n  // everytime the input value of the searchbox\n  // changes.\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n    console.log(this.state.searchField);\n  };\n\n  render() {\n    // Whenever setState is called - the components\n    // are re-rendered.\n\n    // Therefore, once we\n    // set the state of searchField - this render()\n    // function gets called.\n\n    // This means that everytime I change the value\n    // in SearchBox - the original robots array is\n    // filtered.\n\n    // So let's say I type 'Leanne' - the filteration will\n    // happen - and will show me Leanne Graham.\n\n    // However, when I backspace. It'll set the state\n    // of the search field again.\n\n    // And then - filter the original robots array.\n\n    const filterRobots = this.state.robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchField.toLowerCase());\n    });\n\n    // And then we return the view we want.\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f2\">Robo-Friends</h1>\n        <SearchBox\n          searchField={this.searchFeild}\n          onSearchChange={this.onSearchChange}\n        />\n        <CardList robots={filterRobots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// const App = () => {\n//   return (\n//     <div className=\"tc\">\n//       <h1>RoboFriends</h1>\n//       <SearchBox />\n//       <CardList robots={robots} />\n//     </div>\n//   );\n// };\n\n// In order for us to use state, we need to\n// turn App into a class that extends the\n// Component class.\n\n// Create\n\n// class App extends Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       robots: robots,\n//       searchfield: ''\n//     }\n//   }\n\n//   onSearchChange(event){\n//     console.log(event)\n//   }\n\n//   render() {\n//     return (\n//       <div className='tc'>\n//         <h1>RoboFriends</h1>\n//         <SearchBox searchChange={onSearchChange}/>\n//         <CardList robots={this.state.robots}/>\n//       </div>\n//     )\n//   }\n\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Card from \"./Card\";\nimport { robots } from \"./robots\";\nimport CardList from \"./CardList\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// What is happening here?\n// What is ReactDOM.render function?\n// Why is it's second argument\n// document.getElementById?\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}